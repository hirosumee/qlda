{"version":3,"sources":["logo.svg","components/AnswerList.jsx","search.context.js","theme.context.js","components/CustomHeader.jsx","pages/QuestionPage.jsx","pages/Intro.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","SpanCus","styled","span","AnswerSpan","IconText","text","isAns","DIV","type","style","marginLeft","color","answerList","A","B","C","D","Ans","key","SearchContext","createContext","ThemeContext","Search","Input","Container","div","CustomHeader","useContext","setText","dark","setDark","onSearch","placeholder","onChange","checked","CustomerContent","Item","item","index","actions","Meta","title","noidung","ContainerSub","QuestionPage","data","useState","page","setPage","renderData","useMemo","filter","reg","RegExp","match","goToPrev","goToNext","useEffect","listener","e","keyCode","document","addEventListener","removeEventListener","buttonStyle","backgroundColor","Provider","value","offsetTop","position","right","onClick","icon","left","id","header","itemLayout","size","pagination","window","location","hash","setTimeout","current","pageSize","dataSource","renderItem","i","Intro","props","className","src","logo","alt","App","isLoading","setLoading","setData","theme","setTheme","then","Promise","resolve","entries","entry","finally","classNames","href","offset","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,kC,2ZCG3C,IAAMC,EAAUC,IAAOC,KAAV,KACPC,EAAaF,IAAOC,KAAV,KAIVE,EAAW,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAClBC,EAAMD,EAAQH,EAAaH,EACjC,OACE,kBAACO,EAAD,KACGF,EACAC,GACC,kBAAC,IAAD,CAAME,KAAK,SAASC,MAAO,CAAEC,WAAY,EAAGC,MAAO,eAc5CC,MATf,YAA0C,IAApBC,EAAmB,EAAnBA,EAAGC,EAAgB,EAAhBA,EAAGC,EAAa,EAAbA,EAAGC,EAAU,EAAVA,EAAGC,EAAO,EAAPA,IAChC,MAAO,CACL,kBAAC,EAAD,CAAUZ,KAAI,UAAKQ,GAAKP,MAAe,MAARW,EAAaC,IAAI,yBAChD,kBAAC,EAAD,CAAUb,KAAI,UAAKS,GAAKR,MAAe,MAARW,EAAaC,IAAI,yBAChD,kBAAC,EAAD,CAAUb,KAAI,UAAKU,GAAKT,MAAe,MAARW,EAAaC,IAAI,0BAChD,kBAAC,EAAD,CAAUb,KAAI,UAAKW,GAAKV,MAAe,MAARW,EAAaC,IAAI,4B,kBCtBvCC,EAAgBC,wBAAc,ICA9BC,EAAeD,wBAAc,I,yOCIlCE,EAAWC,IAAXD,OACFE,EAAYvB,IAAOwB,IAAV,KA2BAC,MAdf,WAAyB,IAAD,EACFC,qBAAWR,GAAtBS,EADa,sBAEED,qBAAWN,GAFb,mBAEfQ,EAFe,KAETC,EAFS,KAMtB,OACE,kBAAC,EAAD,KACE,kBAACR,EAAD,CAAQS,SAAUH,EAASI,YAAY,oCACvC,kBAAC,IAAD,CAAQC,SANZ,SAAqBC,GACnBJ,EAAQI,IAKyBA,QAASL,M,6sBCtB9C,IAAMM,EAAkBlC,IAAOwB,IAAV,KAOrB,SAASW,EAAT,GAAgC,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MACpB,OACE,kBAAC,IAAKF,KAAN,CAAWG,QAAS3B,EAAWyB,IAC7B,kBAAC,IAAKD,KAAKI,KAAX,CAAgBC,MAAK,0BAAaH,EAAQ,KAC1C,kBAACH,EAAD,KAAkBE,EAAKK,UAI7B,IAAMC,EAAe1C,IAAOwB,IAAV,KA0GHmB,MAtFf,YAAiC,IAATC,EAAQ,EAARA,KAAQ,EACNC,mBAAS,IADH,mBACvBzC,EADuB,KACjBuB,EADiB,OAENkB,mBAAS,GAFH,mBAEvBC,EAFuB,KAEjBC,EAFiB,OAGfrB,qBAAWN,GAAnBQ,EAHuB,oBAIxBoB,EAAaC,mBAAQ,kBAAML,EAAKM,OARxC,SAAgB9C,GACd,IAAM+C,EAAM,IAAIC,OAAOhD,GACvB,OAAO,qBAAGqC,QAAsBY,MAAMF,IAMOD,CAAO9C,MAAQ,CAACA,IACvDkD,EAAW,kBAAMR,EAAO,GAAKC,EAAQD,EAAO,IAC5CS,EAAW,kBAAMR,EAAQD,EAAO,IAEhCvB,EAAY0B,mBAChB,kBAAMjD,YAAO0C,EAAP1C,CAAL,IAEK4B,EAAO,CAAElB,MAAO,WAAc,GAE5BkB,EAAO,CAAElB,MAAO,WAAc,MAItC,CAACkB,IAEH4B,qBAAU,WACR,IAAMC,EAAW,SAAAC,GACG,KAAdA,EAAEC,SAEmB,KAAdD,EAAEC,UAEY,KAAdD,EAAEC,QACXL,IAEuB,KAAdI,EAAEC,SACXJ,MAKJ,OADAK,SAASC,iBAAiB,UAAWJ,GAC9B,kBAAMG,SAASE,oBAAoB,UAAWL,MACpD,CAACX,IACJ,IAAMiB,EAAcd,mBAAQ,WAC1B,OAAO,aACLe,gBAAiB,SACbpC,EAAO,CAAElB,MAAO,SAAY,CAAEA,MAAO,YAE1C,CAACkB,IACJ,OACE,kBAACV,EAAc+C,SAAf,CAAwBC,MAAO,CAAC9D,EAAMuB,IACpC,kBAAC,IAAD,CAAOwC,UAAW,IAAK3D,MAAO,CAAE4D,SAAU,WAAYC,MAAO,KAC3D,kBAAC,IAAD,CACE9D,KAAK,SACLC,MAAOuD,EACPO,QAASf,EACTgB,KAAK,WAGT,kBAAC,IAAD,CAAOJ,UAAW,IAAK3D,MAAO,CAAE4D,SAAU,WAAYI,KAAM,IAC1D,kBAAC,IAAD,CACEjE,KAAK,SACLC,MAAOuD,EACPO,QAAShB,EACTiB,KAAK,UAGT,kBAAChD,EAAD,CAAWkD,GAAG,SACZ,kBAAC,IAAD,CACEC,OAAQ,kBAAC,EAAD,MACRC,WAAW,WACXC,KAAK,QACLC,WAAY,CACV7C,SADU,SACDc,GACPC,EAAQD,GACRgC,OAAOC,SAASC,KAAO,QACvBC,YAAW,WACTH,OAAOC,SAASC,KAAO,KACtB,MAELE,QAASpC,EACTqC,SAAU,GAEZC,WAAYpC,EACZqC,WAAY,SAACjD,EAAMkD,GAAP,OACV,kBAACnD,EAAD,CAAMC,KAAMA,EAAMC,MAAoB,GAAZS,EAAO,GAASwC,U,kBCxGvCC,MAbf,SAAeC,GACb,OACE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKC,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzC,6C,kCCiCOC,MAhCf,WAAgB,IAAD,EACmBhD,oBAAS,GAD5B,mBACNiD,EADM,KACKC,EADL,OAEWlD,mBAAS,IAFpB,mBAEND,EAFM,KAEAoD,EAFA,OAGanD,oBAAS,GAHtB,mBAGNoD,EAHM,KAGCC,EAHD,KAeb,OAXA1C,qBAAU,WACR,kCACG2C,MACC,SAAAvD,GAAI,OACF,IAAIwD,SAAQ,SAAAC,GACVpB,YAAW,kBAAMoB,EAAQzD,KAAO,WAGrCuD,MAAK,SAAAvD,GAAI,OAAIoD,EAAQpD,EAAK0D,QAAQC,UAClCC,SAAQ,kBAAMT,GAAW,QAC3B,IACCD,EAAkB,kBAAC,EAAD,MAEpB,kBAAC1E,EAAa6C,SAAd,CAAuBC,MAAO,CAAC+B,EAAOC,IACpC,yBAAKT,UAAWgB,IAAW,CAAE7E,KAAMqE,KACjC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO9B,UAAW,GAAI3D,MAAO,CAAE4D,SAAU,WAAYC,MAAO,KAC1D,kBAAC,IAAD,CAAQqC,KAAK,SAASnC,KAAK,QAE7B,kBAAC,IAAD,CAAKtE,KAAM,GAAI0G,OAAQ,GACrB,kBAAC,EAAD,CAAc/D,KAAMA,SCrBZgE,QACW,cAA7B9B,OAAOC,SAAS8B,UAEe,UAA7B/B,OAAOC,SAAS8B,UAEhB/B,OAAOC,SAAS8B,SAASxD,MACvB,2DCZNyD,IAASC,OAAO,kBAAC,EAAD,MAASnD,SAASoD,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhB,MAAK,SAAAiB,GACjCA,EAAaC,iB","file":"static/js/main.4c50c504.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { Icon } from 'antd';\nimport styled from 'styled-components';\nconst SpanCus = styled.span``;\nconst AnswerSpan = styled.span`\n  text-decoration: underline;\n  font-weight: 500;\n`;\nconst IconText = ({ text, isAns }) => {\n  const DIV = isAns ? AnswerSpan : SpanCus;\n  return (\n    <DIV>\n      {text}\n      {isAns && (\n        <Icon type=\"star-o\" style={{ marginLeft: 8, color: '#eb2f96' }} />\n      )}\n    </DIV>\n  );\n};\nfunction answerList({ A, B, C, D, Ans }) {\n  return [\n    <IconText text={`${A}`} isAns={Ans === 'A'} key=\"list-vertical-star-o\" />,\n    <IconText text={`${B}`} isAns={Ans === 'B'} key=\"list-vertical-like-o\" />,\n    <IconText text={`${C}`} isAns={Ans === 'C'} key=\"list-vertical-message\" />,\n    <IconText text={`${D}`} isAns={Ans === 'D'} key=\"list-vertical-message\" />,\n  ];\n}\n\nexport default answerList;\n","import { createContext } from 'react';\n\nexport const SearchContext = createContext([]);\n","import { createContext } from 'react';\n\nexport const ThemeContext = createContext([]);\n","import React, { useContext } from 'react';\nimport { Input, Switch } from 'antd';\nimport styled from 'styled-components';\nimport { SearchContext } from '../search.context';\nimport { ThemeContext } from '../theme.context';\n\nconst { Search } = Input;\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  > * {\n    &:first-child {\n      width: 60%;\n    }\n    &:nth-child(2) {\n      margin-left: 10px;\n    }\n  }\n`;\n\nfunction CustomHeader() {\n  const [, setText] = useContext(SearchContext);\n  const [dark, setDark] = useContext(ThemeContext);\n  function switchTheme(checked) {\n    setDark(checked);\n  }\n  return (\n    <Container>\n      <Search onSearch={setText} placeholder=\"Tìm kiếm nội dung \" />\n      <Switch onChange={switchTheme} checked={dark} />\n    </Container>\n  );\n}\n\nexport default CustomHeader;\n","import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport { Affix, Button, List } from 'antd';\nimport answerList from '../components/AnswerList';\nimport CustomHeader from '../components/CustomHeader';\nimport styled from 'styled-components';\nimport { SearchContext } from '../search.context';\nimport { ThemeContext } from '../theme.context';\nconst CustomerContent = styled.div`\n  @media (min-width: 961px) {\n    max-width: 70%;\n  }\n  word-break: break-word;\n  font-weight: 500;\n`;\nfunction Item({ item, index }) {\n  return (\n    <List.Item actions={answerList(item)}>\n      <List.Item.Meta title={`Câu thứ ${index + 1}`} />\n      <CustomerContent>{item.noidung}</CustomerContent>\n    </List.Item>\n  );\n}\nconst ContainerSub = styled.div`\n  margin-bottom: 20px;\n  & .ant-list-item-action {\n    display: flex;\n    align-items: flex-start;\n    flex-direction: column;\n  }\n  & .ant-list-item-action > li {\n    display: block;\n    padding: 0;\n    text-align: start;\n  }\n  & .ant-list-item-action-split {\n    display: none;\n  }\n`;\nfunction filter(text) {\n  const reg = new RegExp(text);\n  return ({ noidung }) => noidung.match(reg);\n}\nfunction QuestionPage({ data }) {\n  const [text, setText] = useState('');\n  const [page, setPage] = useState(1);\n  const [dark] = useContext(ThemeContext);\n  const renderData = useMemo(() => data.filter(filter(text)), [text]);\n  const goToPrev = () => page > 1 && setPage(page - 1);\n  const goToNext = () => setPage(page + 1);\n\n  const Container = useMemo(\n    () => styled(ContainerSub)`\n      li {\n        ${dark ? { color: '#dbd8e3' } : {}}\n        .ant-list-item-meta-title {\n          ${dark ? { color: '#dbd8e3' } : {}}\n        }\n      }\n    `,\n    [dark]\n  );\n  useEffect(() => {\n    const listener = e => {\n      if (e.keyCode === 38) {\n        // up arrow\n      } else if (e.keyCode === 40) {\n        // down arrow\n      } else if (e.keyCode === 37) {\n        goToPrev();\n        // left arrow\n      } else if (e.keyCode === 39) {\n        goToNext();\n        // right arrow\n      }\n    };\n    document.addEventListener('keydown', listener);\n    return () => document.removeEventListener('keydown', listener);\n  }, [page]);\n  const buttonStyle = useMemo(() => {\n    return {\n      backgroundColor: '#fff0',\n      ...(dark ? { color: 'white' } : { color: 'black' }),\n    };\n  }, [dark]);\n  return (\n    <SearchContext.Provider value={[text, setText]}>\n      <Affix offsetTop={500} style={{ position: 'absolute', right: 40 }}>\n        <Button\n          type=\"dashed\"\n          style={buttonStyle}\n          onClick={goToNext}\n          icon=\"right\"\n        />\n      </Affix>\n      <Affix offsetTop={500} style={{ position: 'absolute', left: 0 }}>\n        <Button\n          type=\"dashed\"\n          style={buttonStyle}\n          onClick={goToPrev}\n          icon=\"left\"\n        />\n      </Affix>\n      <Container id=\"start\">\n        <List\n          header={<CustomHeader />}\n          itemLayout=\"vertical\"\n          size=\"large\"\n          pagination={{\n            onChange(page) {\n              setPage(page);\n              window.location.hash = 'start';\n              setTimeout(() => {\n                window.location.hash = '';\n              }, 200);\n            },\n            current: page,\n            pageSize: 5,\n          }}\n          dataSource={renderData}\n          renderItem={(item, i) => (\n            <Item item={item} index={(page - 1) * 5 + i} />\n          )}\n        />\n      </Container>\n    </SearchContext.Provider>\n  );\n}\n\nexport default QuestionPage;\n","import React from 'react';\nimport logo from \"../logo.svg\";\n\nfunction Intro(props) {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n        <p>\n          Loading....\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default Intro;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport './index.css';\nimport './App.css';\nimport QuestionPage from './pages/QuestionPage';\nimport Intro from './pages/Intro';\nimport { Affix, Button, Col, Row } from 'antd';\nimport { ThemeContext } from './theme.context';\nimport classNames from 'classnames';\n\nfunction App() {\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const [theme, setTheme] = useState(false);\n  useEffect(() => {\n    import('./data.json')\n      .then(\n        data =>\n          new Promise(resolve => {\n            setTimeout(() => resolve(data), 200);\n          })\n      )\n      .then(data => setData(data.entries.entry))\n      .finally(() => setLoading(false));\n  }, []);\n  if (isLoading) return <Intro />;\n  return (\n    <ThemeContext.Provider value={[theme, setTheme]}>\n      <div className={classNames({ dark: theme })}>\n        <Row>\n          <Affix offsetTop={20} style={{ position: 'absolute', right: 10 }}>\n            <Button href=\"#start\" icon=\"up\" />\n          </Affix>\n          <Col span={22} offset={1}>\n            <QuestionPage data={data} />\n          </Col>\n        </Row>\n      </div>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}